server:
  port: 8002
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/junior?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      #初始化大小
      initialSize: 5
      #最小值
      minIdle: 5
      #最大值
      maxActive: 20
      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
      #'wall'用于防火墙，SpringBoot中没有log4j，我改成了log4j2
      filters: stat,wall,log4j2
      #最大PSCache连接
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 配置StatFilter
      web-stat-filter:
        #默认为false，设置为true启动
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        max-active: 2000
        max-idle: 300
        min-idle: 100
        max-wait: 3000
        time-between-eviction-runs: 30000
    timeout: 10000
    lettuce:
      shutdown-timeout: 1000
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
        # sentinel dashboard的访问地址，根据上面准备工作中启动的实例配置
        dashboard: 127.0.0.1:8849
        port: 8719
      datasource:
        ds1:
          nacos:
            namespace:
            # nacos的访问地址，，根据上面准备工作中启动的实例配置
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            # nacos中存储规则的dataId
            data-id: ${spring.application.name}-${spring.profiles.active}-sentinel
            # nacos中存储规则的groupId
            group-id: DEFAULT_GROUP
            data-type: json
            #该参数是spring cloud alibaba用来定义存储的规则类型。所有的规则类型可查看枚举类：org.springframework.cloud.alibaba.sentinel.datasource.RuleType
            rule-type: degrade
mybatis:
  # classpath* 此處的* 必須添加 否则会只扫描一个 jar 包，非常重要，2个小时的调试结果。
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.junior.account.model
  configuration:
    map-underscore-to-camel-case: true
pagehelper:
  helperDialect: mysql
  reasonable: false
# 打印sql
logging:
  level:
    ssm.app.mapper : debug
  config: classpath:logback-spring.xml
  #Feign配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  sentinel:
    enabled: true
